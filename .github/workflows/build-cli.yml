name: Build CLI

on:
  workflow_call:
    outputs:
      cli_version:
        description: 'CLI version'
        value: ${{ jobs.build_cli.outputs.cli_version }}

jobs:
  build_cli:
    runs-on: ubuntu-latest
    outputs:
      cli_version: ${{ steps.version.outputs.cli_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Fetch git
        run: ./scripts/fetch-git.sh
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.302'
      - name: Determine version from ref
        id: version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            VERSION="${VERSION#v}"
          else
            VERSION="0.0.0"
          fi
          echo "cli_version=$VERSION" >> "$GITHUB_OUTPUT"
          cat <<'EOF' > version.props
          <Project>
            <PropertyGroup>
              <Version>$VERSION</Version>
            </PropertyGroup>
          </Project>
          EOF
      - name: Restore
        run: |
          dotnet restore OrgCodingHoursCLI/OrgCodingHoursCLI.csproj --locked-mode
          dotnet restore OrgCodingHoursCLI.Tests/OrgCodingHoursCLI.Tests.csproj --locked-mode
      - name: Build
        run: dotnet build OrgCodingHoursCLI/OrgCodingHoursCLI.csproj -c Release --no-restore
      - name: Run unit tests
        run: dotnet test OrgCodingHoursCLI.Tests/OrgCodingHoursCLI.Tests.csproj --no-restore
      - name: Pack CLI
        run: dotnet pack OrgCodingHoursCLI/OrgCodingHoursCLI.csproj -c Release -o package -p:PackageVersion=${{ steps.version.outputs.cli_version }} --no-restore
      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: cli-package
          path: package/*.nupkg
