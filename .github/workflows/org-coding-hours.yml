name: Org Coding Hours

on:
  workflow_dispatch:
    inputs:
      window_start:
        description: 'Optional start date (YYYY‑MM‑DD)'
        required: false
      repos:
        description: |
          One or more “owner/repo” pairs, comma‑separated.
          Omit to analyse *this* repository.
        required: false

# Cancel a redundant run on the same ref, but still allow the
# matrix jobs inside a single run to execute in parallel.
concurrency:
  group: ${{ github.workflow }}‑${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  GO_VERSION: '1.24'
  METRICS_BRANCH: metrics
  PAGES_BRANCH: gh-pages
  REPORTS_DIR: collected-reports

# ───────────────────────────────────────────────────────────────
# 0) Convert the repos input into a matrix‑friendly JSON array
# ───────────────────────────────────────────────────────────────
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.prepare.outputs.repos }}
    steps:
      - id: prepare
        shell: bash
        run: |
          INPUT='${{ github.event.inputs.repos }}'
          if [[ -z "$INPUT" ]]; then
            echo "repos=[\"${{ github.repository }}\"]" >>"$GITHUB_OUTPUT"
          else
            # Canonicalise comma‑separated list → JSON array
            arr=$(printf '%s\n' "$INPUT" | sed 's/ *, */,/g; s/^/["/; s/,/","/g; s/$/"]/')
            echo "repos=$arr" >>"$GITHUB_OUTPUT"
          fi

# ───────────────────────────────────────────────────────────────
# 1) Run git‑hours **once per repo** (matrix)
# ───────────────────────────────────────────────────────────────
  report:
    needs: set-matrix
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJSON(needs.set-matrix.outputs.repos) }}  # :contentReference[oaicite:0]{index=0}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run Org Coding Hours Action
        uses: LabVIEW-Community-CI-CD/org-coding-hours-action@v7
        with:
          repos: ${{ matrix.repo }}
          window_start: ${{ github.event.inputs.window_start }}
          metrics_branch: ${{ env.METRICS_BRANCH }}
          pages_branch: ${{ env.PAGES_BRANCH }}

      - name: Restore reports directory
        shell: bash
        run: |
          git fetch --quiet origin "$METRICS_BRANCH" || exit 0
          git switch --quiet "$METRICS_BRANCH"

      - name: Collect JSON reports
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "${REPORTS_DIR}"
          mapfile -t reports < <(find "$GITHUB_WORKSPACE" -type f -path '*/reports/*.json')
          if (( ${#reports[@]} == 0 )); then
            echo "::error ::No JSON reports found"
            exit 1
          fi
          cp "${reports[@]}" "${REPORTS_DIR}/"

      - id: sanitize
        run: echo "repo=${REPO//\//-}" >>"$GITHUB_OUTPUT"
        env:
          REPO: ${{ matrix.repo }}

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: git-hours-json-${{ steps.sanitize.outputs.repo }}
          path: ${{ env.REPORTS_DIR }}
          retention-days: 30
          if-no-files-found: error

