name: Test and Release

# This workflow tests the git‑hours composite action and the KPI microsite build
# before cutting a new release.  It is triggered manually via workflow dispatch
# or automatically on pushes to the default branch.  The existing git‑hours
# composite action installs Go and the git‑hours tool, runs git‑hours and
# produces a `git-hours.json` report【555677995448580†L14-L48】.  The KPI microsite
# is a separate frontend project that turns these JSON reports into a static
# dashboard.  Building the microsite as part of the test workflow ensures
# changes to the composite action don't break site generation.

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  # Run the existing git-hours action against this repository to verify it still works
  test-git-hours:
    runs-on: ubuntu-latest
    outputs:
      # Expose the path to the git-hours report so that downstream jobs can consume it
      results: ${{ steps.hours.outputs.results }}
    steps:
      - uses: actions/checkout@v4
      - name: Run git-hours composite action
        id: hours
        uses: ./.github/actions/git-hours
        with:
          # Use the default repo path so the action analyses this repository
          repo_path: '.'
      - name: Upload git-hours report
        uses: actions/upload-artifact@v4
        with:
          name: git-hours-report
          path: ${{ steps.hours.outputs.results }}

  # Build the KPI microsite to verify that it still compiles after any changes to the
  # git-hours schema or output.  This job assumes that the microsite source lives
  # under the `kpi-microsite` directory and that it uses npm as the package
  # manager.  Adjust the working directory and commands if your microsite uses
  # pnpm or yarn instead.
  build-kpi-microsite:
    runs-on: ubuntu-latest
    needs: test-git-hours
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          # Target an LTS version; adjust to match the microsite’s engine requirement
          node-version: '18'
      - name: Install dependencies
        working-directory: kpi-microsite
        run: npm ci
      - name: Copy git-hours report into microsite data directory
        run: |
          # Create the data directory if it doesn't exist
          mkdir -p kpi-microsite/src/data
          # Copy the generated git-hours report from the previous job
          cp "${{ needs.test-git-hours.outputs.results }}" "kpi-microsite/src/data/git-hours.json"
      - name: Build microsite
        working-directory: kpi-microsite
        run: npm run build --if-present
      - name: Upload built site
        uses: actions/upload-artifact@v4
        with:
          name: kpi-microsite
          path: kpi-microsite/dist

  # Publish a new release once both tests have passed.  This job is kept as
  # simple as possible – it merely tags the current commit and publishes a
  # GitHub release.  In a real project you might use a tool like `release-please`
  # or `semantic-release` to automate versioning.  This job will only run on
  # pushes to `main` when explicitly requested via workflow dispatch.
  release:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [test-git-hours, build-kpi-microsite]
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: v${{ github.run_number }}
          body: |
            Automated release generated by the test-and-release workflow.
            Includes verified changes to the git-hours action and KPI microsite build.
